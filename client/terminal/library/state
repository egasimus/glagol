(let [state { :input   ""
              :focus   :input 
              :results [] }]

  (../events/on :keytyped (fn [c]
    (set! state.input (state.input.concat c))
    (../render)))

  (../events/on :backspace (fn []
    (set! state.input (state.input.slice 0 -1))
    (../render)))

  (../events/on :enter (fn []
    (.then (../api :invoke "library/search" state.input)
      (fn [results]
        (set! state.results (JSON.parse results))
        (../render))
      (fn [err]
        (log.as :err err)))))

  state)
