(let [

  w (require "etude-web")

  server
    (w.server { :port 2000 }
      (w.page2    "/"      client-main)
      (w.endpoint "/files" @server-library)
      (w.socket   "/jack"))

  emit
    (fn [client evt arg] (client.invoke "emit" evt arg))

  sockets []

] (.on (aget server.state.sockets "/jack") "connection" (fn [socket]
    (sockets.push
      (let [exported {}
            client   ((require "q-connection") socket exported)]
        (set! exported.api  (@server-api (emit.bind nil client)))
        (set! exported.state @server-state)
        { :socket socket
          :client client
          :exported exported}))))

  server)
