#!/usr/bin/env node

var glagol = require('glagol')

// enable long stack traces
require('longjohn')

// load core
var app = glagol(rel('core/server'), {})
  , log = app.get('log.js')();
['bundler', 'server'].forEach(function (lib) {
  // TODO auto set via package.json
  var lib = app.get('lib').get(lib);
  lib.options = lib.get('glagol-options.js')(); });

// load modules
var modules = glagol.Directory('modules');
app.add(modules);
require('fs').readdirSync(rel('modules')).forEach(function (module) {
  try {
    modules.add(glagol(rel('modules/' + module + '/server')))
  } catch (e) {
    log('could not load module', modulePath);
    log(e);
  }
});

// start, or export
module.exports = app;
if (module === require.main) {
  app().main();
  if (process.versions.electron) initElectron();
}

// helpers

function rel (p) {
  return require('path').resolve.apply(null, [__dirname].concat(p.split('/')));
}

function initElectron () {
  log('running in electron.');
  var electron = require('electron')
    , w;
  electron.app.on('ready', function () {
    log('electron ready, opening window');
    w = new (require('electron').BrowserWindow)({ frame: false })
    w.loadURL('http://localhost:1617');
    w.on('closed', function () { w = null })
  })
}
