(let [addr      ./options/library-socket
      WebSocket (require :ws)
      socket    (new WebSocket ./options/library-socket)
      do-send   (fn [data] (socket.send (apply str data)))
      send      (fn [& args]
                  (if (= WebSocket.OPEN socket.ready-state)
                    (do-send args)
                    (queue.push args)))
      queue     []]

  (socket.on :open
    (fn []
      (queue.map do-send)
      (set! queue [])
      (log.as addr :opened)))

  (socket.on :message
    (fn [data flags]
      (log.as addr data)))

  { :search (fn [query] (send "(search \"" query "\")"))})
