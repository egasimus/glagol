(let [

  path (require "path")
  send (require "send-data/json")
  glob (require "glob")
  url (require "url")
  w (require "etude-web")

  root "/home/epimetheus/Sounds"
  sounds []
  strip (fn [paths] (paths.map (fn [x] (path.relative root x))))
  search (fn [req res]
    (let [get (.-query (url.parse req.url true))
          q   get.q]
      (if q (log "search" q))
      (send req res (strip (.slice
        (if (not q)
          sounds
          (sounds.filter
            (fn [snd] (not (= -1 (snd.index-of q)))))) 0 50)))))
  server
    (w.server { :port (+ 2055 @the-answer) }
      (w.page2    "/" index)
      (w.endpoint "/files" search)
      (w.socket   "/jack"))

  Q (require "q")
  QC (require "q-connection")

  sockets []

  ] (.on (aget server.state.sockets "/jack") "connection"
      (fn [socket]
        (log "connection on /jack, woo!")
        (sockets.push socket)))

    (glob (str root "/**/*.wav") {} (fn [err files]
      (if err (throw err))
      (set! sounds files))))

