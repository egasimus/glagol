(let [emitter (new (.-EventEmitter2 (require "eventemitter2")))]
  (emitter.on "sequencer.click" (fn [t n]
    (let [curr-track
            (aget @state t)
          curr-val
            (aget curr-track n)
          next-val
            (- 1 curr-val)
          next-track
            (.concat (.concat (curr-track.slice 0 n) next-val)
              (curr-track.slice (+ 1 n)))]
      (console.log (assoc @state t next-track))
      (state.value.set (assoc @state t next-track)))))
  (emitter.on "pads.add" (fn []
    (state.value.set (assoc @state :pads (.concat (.-pads @state) [{}])))))
  (emitter.on "pads.select" (fn [i]
    (state.value.set (assoc @state :selectedPad i))))
  emitter)
