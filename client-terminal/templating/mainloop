(let [Diff (require "deep-diff")]
  (fn mainloop [screen get-template get-data]
    (let [parse     (fn [] (./parse ((get-template) (get-data))))
          parsed    (parse)
          render    (fn [parsed] (./render screen parsed))
          rendered  (render parsed)
          refresh   nil]

      (set! refresh (fn refresh[]
        (let [new-parsed   (parse)
              new-rendered (render new-parsed)]
          (log (Diff parsed new-parsed))
          (screen.remove rendered)
          (try (set! rendered new-rendered) (catch e (log e.message)))
          (screen.append rendered)
          ;(screen.render)
          (set-timeout refresh ../options/refresh-rate))))

      (refresh))))

      ;(screen.render))))
