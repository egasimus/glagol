(lambda ()

  (../api/call "invoke" "jack/control/IsStarted"
    (lambda (e status)
      (if e (../lib/error e))
      (../state/jack/started/set status)))

  (../api/call "invoke" "jack/control/on" "ServerStarted"
    (lambda ()
      (../state/jack/started/set true)))

  (../api/call "invoke" "jack/control/on" "ServerStopped"
    (lambda ()
      (../state/jack/started/set false)))

  (./sampler/init)

  (./sequencer/init)

  (./transport/init)

  ;(->
  ;  (../api/call "invoke" "sampler/list" update-samplers)
  ;  (catch (../lib/error "error subscribing to sampler list")))

    ;(lambda (results)
    ;  (= results (JSON.parse results))
    ;  (= ids (Object.keys results))
    ;  (var samplers (../state/samplers))
    ;  (ids.map (lambda (id)
    ;    (var data (get results id))
    ;    (= (get samplers data.id) (../models/sampler data))))
    ;  (../state/samplers/set samplers))

)
