(let [emitter
        (new (.-EventEmitter2 (require "eventemitter2"))
          { :maxListeners 64 :wildcard true } )

      api
        @client-api]

  (emitter.on "sequencer.click" (fn [t n]
    (let [curr-track
            (aget @client-state t)
          curr-val
            (aget curr-track n)
          next-val
            (- 1 curr-val)
          next-track
            (.concat (.concat (curr-track.slice 0 n) next-val)
              (curr-track.slice (+ 1 n)))]
      (console.log (assoc @client-state t next-track))
      (client-state.value.set (assoc @client-state t next-track)))))

  (emitter.on "transport.play" (fn []
    (log "play!")
    (.then (api.invoke "start") (fn [] (log "playing.")))))

  (emitter.on "transport.pulse" (fn [t]
    (client-state.value.set (assoc @client-state :position t))))

  emitter)
