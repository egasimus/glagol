((lambda ()

  (var path  (require "path"))
  (var Q     (require "q"))
  (var spawn (. (require "child_process") spawn))

  (function Sampler (sample)

    (var state (= this.state (object)))
    (= state.name (path.basename sample))
    (= state.path (path.resolve  sample))
    (= state.proc null)

    ((. (Q.spread (array ../jack/control ../jack/patchbay) start) catch) err)

    (function start (control patchbay)
      (control.IsStarted (lambda (e started)
        (if e (throw e))
        (console.log "is-started" started)
        (if started (spawn-sampler) (control.on "ServerStarted" spawn-once))))

      (function spawn-once ()
        (console.log "spawn-once")
        (control.remove-listener "ServerStarted" spawn-once)
        (spawn-sampler))

      (function spawn-sampler ()
        (console.log "spawn-sampler")
        (console.log ./options/sampler-path)
        (= state.proc (spawn ./options/sampler-path))
        (control.on  "ServerStopped"  premature-stop)
        (patchbay.on "ClientAppeared" client-appeared))

      (function premature-stop ()
        (console.log "premature-stop")
        ; server stopped before client appeared
        (control.remove-listener  "ServerStopped"  premature-stop)
        (patchbay.remove-listener "ClientAppeared" client-appeared)
        (state.proc.on "exit" (lambda (code signal)
          (control.on "ServerStarted" spawn-once)))
        (state.proc.kill))

      (function client-appeared (ver id name)
        (console.log "client-appeared" id name)
        (if (=== name state.name) (block
          (control.remove-listener  "ServerStopped"  premature-stop)
          (patchbay.remove-listener "ClientAppeared" client-appeared)))))

    (function err (e)
      (console.error "error getting jack dbus interface when starting sampler")
      (console.log e.message)
      (console.log e.stack)))

  (return Sampler)

))
