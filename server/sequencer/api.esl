(lambda () (return (object

  "list" (lambda ()
    (var sequencers (((require "observ-struct") (./state)))) ; dang!
    (return (JSON.stringify sequencers)))

  "add" (lambda ()
    (var sequencers (./state))
    ;(console.log (+ "" ../models/sequencer))
    (var sequencer  (../models/sequencer))
    (var id (. (sequencer) id))
    (= (get sequencers id) sequencer)
    (./state/set sequencers)
    (return (sequencer)))

  "set" (lambda (id step value)
    (console.log "set!" id step value)
    (var sequencer (get (./state) id))
    (sequencer.seq.put step value)
    (console.log (sequencer.seq))
    (return (sequencer.seq)))

  "play" (lambda ()
    (var api (./api))
    (api.stop)
    (var t (set-interval (lambda () (api.step)) 107.14))
    (./state/timer/set t))

  "step" (lambda ()
    (var sequencers (./state))
    ((. (Object.keys sequencers) map) (lambda (id)
      (var sequencer (get sequencers id))
      (var step (sequencer.step))
      (var len (. (sequencer.seq) length))
      (if (< step (- len 1))
        (sequencer.step.set (+ step 1))
        (sequencer.step.set 0)))))

  "stop" (lambda ()
    (var timer (./state/timer))
    (if timer (clear-interval timer))
    (./state/timer/set null))

)))
