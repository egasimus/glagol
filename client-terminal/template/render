(let [blessed (require "blessed")]
  (fn render [vnode]
    (if (or (not vnode) (not (= vnode.type "VNode")))
      (throw (Error. (str vnode "is not a VNode"))))
    (let [node ((aget blessed vnode.element) vnode.options)]
      (cond
        (string? vnode.content)
          (node.set-content vnode.content)
        (vector? vnode.content)
          (vnode.content.map (fn [vchild]
            (node.append (render vchild))))
        (and (object? vnode.content) (= vnode.content.type "VNode"))
          (node.append (render vnode.content)))
      node)))
