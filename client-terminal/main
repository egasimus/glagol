(let [B           ./bless
      screen      (B.screen { :smartCSR true :bg nil })
      session-box (B.box { :top 3 :left 1 :right 1 :bottom 1 :scrollable true })
      render
        (fn render [screen]
          (screen.realloc)
          (./render/toolbar screen)
          (./render/statusbar screen)
          (screen.render))]

  ; print project contents
  (log ./session/score)

  ; setup
  (set! screen.title "etude demo")
  (screen.enable-mouse)

  ; keyboard events
  (.map (keys ./keymap) (fn [event]
    (screen.key (aget ./keymap event)
      (fn [c k] (./events/emit event [c k])))))
  (./events/on :exit (fn [] (process.exit)))
  (./events/on :refresh (fn [] (screen.realloc) (screen.render)))

  ; session body
  (screen.append session-box)
  (let [scenes (calculate-scene-positions ./session/score)]
    (.map (keys scenes) (fn [i]
      (let [scene (aget scenes i)]
        (add-scene session-box (Number i) scene.label)))))
  (.map (keys ./session/tracks) render-track)

  (screen.render)

  { :undo (fn [] (screen.destroy)) })
