    (fn [opts value]
      (let [width  15
            height 15
            args   { :bottom 0 :width (- width 1) :height height }
            box    (../bless/Box (merge args opts))]

      (box.append (../bless/Text {
        :bottom 1
        :height 1
        :left 1
        :right 0
        :content opts.name}))

      (box.append (../bless/Box {
        :bottom 0
        :height 1
        :left 0
        :right 0
        :ch "â–„"
        :bg nil
        :fg opts.color}))

      (box.append (../bless/Box {
        :bottom 2
        :left 5
        :height (Math.round (or value 0))
        :width 2
        :bg :green }))

      (let [vu-num { :left 0 :fg :black }]
        (.map
          [ { :bottom 13 :content "   0 dB " }
            { :bottom 11 :content "  -6 "    }
            { :bottom 9  :content " -12 "    }
            { :bottom 7  :content " -18 "    }
            { :bottom 5  :content " -24 "    }
            { :bottom 3  :content " -48 "    }
            { :bottom 3  :content " -60 "    } ]
          (fn [n] (box.append (../bless/Text (merge vu-num n))))))

      ;(let [btn { :bg "#111111" :right 1 }]
        ;(.map
          ;[ { :bottom 10 :content " FX " }
            ;{ :bottom 8  :content " IO " }
            ;{ :bottom 6  :content " M "  }
            ;{ :bottom 4  :content " S "  }
            ;{ :bottom 2  :content " R "  } ]
          ;(fn [n] (box.append (../bless/Text (merge btn n))))))

      box))

