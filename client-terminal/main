(let [B
        (require "blessed")

      screen
        (B.screen { :smartCSR true })

      n-times
        (fn [n c]
          (loop [i 0 v ""] (if (< i n) (recur (+ i 1) (str v c)) v)))

      add-box
        (fn [parent align x y w c]
          (let [default (assoc { :fg c } align x)]
            (.map ["▄" "█" "▀"] (fn [ch i]
              (parent.append (B.text (assoc default
                :content (n-times w ch) :top (+ y i)))))))
          parent)

      add-text
        (fn [parent align x y fg bg c]
          (parent.append
            (B.text (assoc { :content c :fg fg :bg bg :top y } align x)))
          parent)

      add-clips
        (fn [parent x n c]
          (loop [i 0]
            (parent.append (B.text { :content " ▶ " :bg c :fg "black" :left x :top (+ (* i 3) 4)}))
            (parent.append (B.text { :content "clip 001 " :bg c :fg "black" :left (+ x 3) :top (+ (* i 3) 4)}))
            (parent.append (B.text { :content "▄▄▄▄▄▄▄▄▄▄▄▄" :fg c :left x :top (+ (* i 3) 3)}))
            (parent.append (B.text { :content "▀▀▀▀▀▀▀▀▀▀▀▀" :fg c :left x :top (+ (* i 3) 5)}))
            (if (< i n) (recur (+ i 1))))
          parent)

  ]

  (-> screen
    (add-box  :left  1  0 9  :black)
    (add-text :left  2  1    :yellow nil    "174")
    (add-text :left  5  1    :yellow :black " BPM")

    (add-box  :left  11 0 7  :black)
    (add-text :left  12 1    :yellow nil    " 4/4 ")

    (add-box  :left  19 0 11 :black)
    (add-text :left  20 1    :yellow nil    " 1 Bar ")
    (add-text :left  27 1    :yellow :black " Q ")

    (add-box  :right 1  0 10  :black)
    (add-text :right 2  1     :yellow :black "MIDI ↓ ↑")

    (add-box  :right 12 0 9   :black)
    (add-text :right 13 1     :yellow :black "OSC ↓ ↑")

    (add-box  :right 22 0 7   :black)
    (add-text :right 23 1     :yellow :black "KBD ↓")

    (add-clips 1  7  :red)
    (add-clips 15 11 :yellow)
    (add-clips 29 5  :green)
    (add-clips 43 13 :blue))

  (set! screen.title "etude demo")
  (screen.key ["escape" "q" "C-c"] (fn [c k] (process.exit)))
  (screen.render))
