(let [h (.-h @lib-vdom)]
  (fn [s] (s.tracks.map (fn [track track-no]
    (let [t    track.data
          slot (aget t.slots t.selected)]
      (h ".sequencer" [
        (h ".sequencer-label" track.name)
        (h ".sequencer-mid" [
          (h ".sequencer-body" { :foo :bar }
            (@lib-times slot.length (fn [i]
              (let [value (aget slot i)]
                (h (str ".sequencer-cell" (if value ".active" ""))
                  { :dataset { :index i }
                    :onclick (@lib-emit "sequencer.click" track-no i) })))))
          (h ".sequencer-slots"
            (.concat
              [ (h ".sequencer-selector"
                  { :style { :left (str (* t.selector 100) "%")}}) ]
              (@lib-times t.slots.length (fn [i]
                (h (str ".sequencer-slot" (if (= i t.selected) ".selected" ""))
                  { :dataset { :index i } }))))) ]) ]))))))
