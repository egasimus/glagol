((lambda ()

  (function err (msg) (return (lambda (e)
    (console.error msg)
    (console.log e.message)
    (console.log e.stack))))

  (var emitter (new (. (require "eventemitter2") EventEmitter2)
    (object "maxListeners" 64 "wildcard" true)))

  (emitter.once "init"
    (lambda ()
      (./api/call "invoke" "jack/control/IsStarted" (lambda (e status)
        (if e (err e))
        (./state/jack/started/set status)))
      (./api/call "invoke" "jack/control/on" "ServerStarted" (lambda ()
        (./state/jack/started/set true)))
      (./api/call "invoke" "jack/control/on" "ServerStopped" (lambda ()
        (./state/jack/started/set false)))
      ((. (./api/call "invoke" "sequencer/list") then)
        (lambda (results) (results.map (lambda (data)
          (./state/tracks/push (./models/track data))
          (./api/call "invoke" "library/detail" data.path))))
        (err "error retrieving track list"))))

  (emitter.on "search.query"
    (lambda ()
      (./search (. (document.get-element-by-id "prompt") value))))

  (emitter.on "search.results"
    (lambda (results)
      (./state/results/set results.results)))

  (emitter.on "track.add"
    (lambda (fullpath)
      ((. (./api/call "invoke" "sequencer/add" fullpath) then)
        (lambda (track)
          (./state/tracks/push (./models/track track))
          (console.log "created track" track)
          ((. (./api/call "invoke" "sampler/add" track.id) then)
            (lambda (sampler))
            (err (+ "error adding sampler for " id))))
        (err (+ "error adding sequencer for " fullpath)))))

  (emitter.on "track.sequencer.click"
    (lambda (track-n step-n)
      (var track (./state/tracks/get track-n))
      (var value (- 127 (track.seq.get step-n)))
      (track.seq.put step-n value)
      (./api/call "invoke" "sequencer/set" track-n step-n value)))

  (emitter.on "toolbar.jack"
    (lambda ()
      (if (./state/jack/started)
        (./api/call "invoke" "jack/control/StopServer")
        (./api/call "invoke" "jack/control/StartServer"))))

  (emitter.on "toolbar.play"
    (lambda ()
      (./api/call "invoke" "sequencer/play")))

  (emitter.on "toolbar.stop"
    (lambda ()
      (./api/call "invoke" "sequencer/stop")))

  (return emitter)))
