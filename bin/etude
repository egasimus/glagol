#!/usr/bin/env node

var chokidar = require('chokidar')
  , fs       = require('fs')
  , path     = require('path')
  , runtime  = require('../runtime.js')
  , engine   = runtime.requireWisp('../engine.wisp');

require('keypress')(process.stdin);

if (process.argv.length <= 2) {

  console.log("Please specify either an entry file, a root directory, or both.");
  process.exit();

} else {

  var entryPointPath = null
    , rootDir;

  if (process.argv.length === 3) { // <node> <etude> <entry point>

    entryPath = path.resolve(process.argv[2]);

    if (!fs.existsSync(entryPath)) {
      console.log("\"" + entryPath + "\"", "doesn't seem to exist.");
      process.exit();
    }

    var stat = fs.statSync(entryPath);
    if (stat.isFile()) {
      rootDir = process.cwd();
      console.log("Assuming root directory:", rootDir);
      console.log("Loading entry point:", entryPath);

    } else if (stat.isDirectory()) {
      console.log("Setting root directory", entryPath);
      rootDir = entryPath;
      entryPath = null;

    } else {
      console.log("\"" + entryPath + "\"",
        "doesn't seem to be neither a file nor a directory.");
      process.exit();
    }

  } else { // <node> <etude> <working dir> <entry point> <...ignored>

    rootDir = path.resolve(process.argv[2]);
    entryPath = path.resolve(rootDir, process.argv[3]);
    if (process.argv.length > 4) {
      console.log("The following arguments have been ignored:",
        process.argv.slice(4));
    }

  }

  engine.start(rootDir).then(function (state) {
    engine.tree.descend(state.tree, path.relative(rootDir, entryPath)).value;
  }).done();

}
