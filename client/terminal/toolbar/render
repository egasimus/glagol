(let [bless   (require :etude-bless)
      state   ./state
      default { :top :center :height 1 }
      off     { :bg nil    :fg :white }
      on      { :bg :green :fg :black }
      btn     (fn [opts is-on] (bless.Box
                (assoc (merge default (if is-on on off) opts)
                  :width (+ 4 opts.content.length))))
      txt     (fn [opts is-on] (bless.Textbox
                (assoc (merge default (if is-on on off) opts)
                  :width (+ 4 opts.value.length)))) ]

  (fn []
    (./screen/children/map (fn [c] (./screen/remove c)))
    (.map
      [ (txt { :left 2   :value   "???"      })
        (btn { :left 6   :content "BPM"      })

        (txt { :left 12  :value   "4/4"      })

        (txt { :left 18  :value   "1 bar"    })
        (btn { :left 24  :content " Q "      })

        (btn { :left 32  :content "REW"      })
        (btn { :left 37  :content "PLAY"     })
        (btn { :left 43  :content "REC"      })

        (btn { :right 0  :content "JACK"     } state.jack-up)

        (btn { :right 10 :content "OSC ↓ ↑"  })

        (btn { :right 22 :content "MIDI ↓ ↑" })

        (btn { :right 34 :content "KBD ↓"    }) ]
      (fn [b] (./screen/append b)))
    (./screen/render)))
