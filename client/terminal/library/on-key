(fn [c k]
  (let [state ./state] (cond

    (= k.name :backspace) (../events/emit :backspace)

    (= state.focus :input) (cond
      (= k.name :enter) (../events/emit :search)
      c (../events/emit :keytyped c))

    (= state.focus :results) (cond
      (= k.name :up)    (../events/emit :prev-result)
      (= k.name :down)  (../events/emit :next-result)
      (= k.name :enter) (../events/emit :select)
      (= c :p)          (../events/emit :preview)
      (= c "/")         (../events/emit :search-more))))))
