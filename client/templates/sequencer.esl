(lambda (data)

  (var info (array
    (array "text" "Type"  "Sequencer")
    (array "text" "ID"    data.id)
    (array "step" "Step"  (+ data.step "/" data.seq.length))))
  (var header (./h ".device-header" (array
    (./device-label data.label (+ "Sequencer " data.id))
    (./h ".device-buttons" (array
      (?: /state/session/sampler (./sequencer-connect data.id) null)
      (./device-info info))))))

  (var notes (array "C" "C#" "D" "D#" "E" "F" "F#" "G" "G#" "A" "A#" "B"))

  (var keys (array))
  (var lanes (array))
  (for (var i 0) (< i 12) (++ i)
    (var note (get notes (% i 12)))
    (var color (?: (=== 2 note.length) ".black" ".white"))
    (keys.push (./h (+ ".sequencer-piano-key" color) note))
    (lanes.push (./h ".sequencer-piano-lane")))
  (var bar-width "25%")
  (function grid-beat (i) (return (./h ".sequencer-piano-grid-beat"
    (object "style" (+ "width:25%;left:" (* i 25) "%")))))
  (function grid-bar (i) (return (./h ".sequencer-piano-grid-bar"
    (object "style" (+ "width:" bar-width ";left:" (* i 25) "%"))
    (array (grid-beat 0) (grid-beat 1) (grid-beat 2) (grid-beat 3)))))
  (var grid (array (grid-bar 0) (grid-bar 1) (grid-bar 2) (grid-bar 3)))
  (var piano-roll (./h ".sequencer-piano" (array
    (./h ".sequencer-piano-keys" keys)
    (./h ".sequencer-piano-body" (lanes.concat grid)))))

  (var steps (./h ".sequencer-steps" (data.seq.map (lambda (val i) (return (./h
    (+ ".sequencer-step"
      (?: (> val 0)         ".active"  "")
      (?: (=== i data.step) ".current" ""))
    (object "onclick" (./emit "sequencer.click" data.id i))))))))

  (return (./h ".device.sequencer" (array header piano-roll steps))))
